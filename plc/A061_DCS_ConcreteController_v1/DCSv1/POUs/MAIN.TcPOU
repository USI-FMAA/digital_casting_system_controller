 < ?xml version = "1.0" encoding = "utf-8"? >
 < TcPlcObject Version = "1.1.0.1" ProductVersion = "3.1.4024.11" >
  < POU Name = "MAIN" Id = "{231ff93b-6e60-47c8-9de3-03f4e5acf3e6}" SpecialFunc = "None" >
    < Declaration > < ![CDATA[PROGRAM MAIN
VAR

	fb_MC_SetPosition: FB_SoEAX5000SetPositionOffset;
	pos: LREAL;
	Mixer1_2: FB_Mixer1_2;
	Analog: FB_Analog;

	SafetyReset: BOOL;
	b_Enable: BOOL;

	b_Reset: BOOL;

	Test: MC_ReadStatus;



	fb_Laptop_SetOutputDataToIO: FB_SetOutputDataToIO;


	getOutputDataLaptop: FB_GetOutputData;





	//
	b_Safety_Reset: BOOL;
	b_Timer_Rest: BOOL;
	t_CC1_Time_Safety_Rest: TIME := T#5s; // wait 5s for controller restart
	fb_CC1_Trigger_Safety_On: R_TRIG;
	fb_CC1_Trigger_Safety_Off: R_TRIG;
	fb_CC1_Timer_Safety: TON;
END_VAR
]] > < / Declaration >
    < IMPLEMENTATION >
      < ST > < ![CDATA[
// ***********************************************************************************
//
// Müller-steinag Gruppe, Kandergrien Einigen, CH-3646 Bern
// ETH Zurich, Building HIF E26, Laura-Hezner-Weg 7, CH-8093 Zürich
//
// ***********************************************************************************
//
// PROJECT: A061 Digital Casting System
// FUNCTION: main
// AUTHOR: Weiting Chen
// EMAIL: chenw@usi.ch
// Copyright: USI Mendrisio; ETH Zürich; Müller-steinag Gruppe (CH) 2023
// Contributor: Philippe Fleischmann, Mathias Suter
//
// ***********************************************************************************


P_Control_Mode();

 / // // Laptop mode
IF GVL.b_mode_laptop THEN

	b_Timer_Rest := GVL_RESD.b_Concrete_Controller_reset;

	// controller reset trigger
	fb_CC1_Timer_Safety(
						IN := b_Timer_Rest,
						PT := t_CC1_Time_Safety_Rest);

	fb_CC1_Trigger_Safety_On(clk := fb_CC1_Timer_Safety.IN);
	fb_CC1_Trigger_Safety_Off(clk := fb_CC1_Timer_Safety.Q);
	// b_Safety_Reset:=FALSE;
	IF fb_CC1_Trigger_Safety_On.Q THEN
		b_Safety_Reset := TRUE;
	END_IF
	IF fb_CC1_Trigger_Safety_Off.Q THEN
		b_Safety_Reset := FALSE;
		GVL_RESD.b_Concrete_Controller_reset := FALSE;
	END_IF
	GVL_IO.ob_CC1_Safety_Reset := b_Safety_Reset OR GVL_IO.ib_CC1_Button_Reset;
	//

	P_CC1_Enable( b_set_run := GVL_RESD.b_Concrete_Controller_enable );

	fb_Laptop_SetOutputDataToIO(
		// Mixer
		b_MI1_set_run := GVL_RESD.b_MI1_set_run,
		b_Ml1_Enable := GVL_RESD.b_Ml1_Enable,
		b_MI1_Curved_Speed_On := GVL_RESD.b_MI1_set_curved_speed_mode_on,
		f_MI1_Override_Speed := GVL_RESD.n_MI1_set_speed,
		f_MI1_Override_Max_Speed := GVL_RESD.f_MI1_Override_Max_Speed,

		// Concrete Pump
		b_CP1_Forward_On := GVL_RESD.b_Concrete_Pump_Forward_On,
		b_CP1_Backward_On := GVL_RESD.b_Concrete_Pump_Backward_On,
		b_CP1_Flush_On := GVL_RESD.b_Concrete_Pump_Flush_On,
		b_CP1_Check_On := GVL_RESD.b_Concrete_Pump_Check_On,
		n_CP_Flowrate_mode := TRUE,
		n_CP1_Operate_Flowrate := REAL_TO_INT(GVL_RESD.f_Concrete_Pump_Set_Flowrate * 100),
		n_CP1_Check_Flowrate := REAL_TO_INT(GVL_RESD.f_Concrete_Pump_Check_Flowrate * 100),
		n_CP1_Flush_Flowrate := REAL_TO_INT(GVL_RESD.n_Concrete_Pump_Flush_Flowrate * 100),
		f_dosing_volume := REAL_TO_INT(GVL_RESD.f_Concrete_Pump_dosing_volume * 100),

		n_CP1_max_speed := GVL_RESD.n_Concrete_Pump_Max_Speed,
		n_CP1_target_speed := GVL_RESD.n_Concrete_Pump_Set_Speed,

		// Admixture pump (High)
		b_AP1_Power_On := GVL_RESD.b_Admixture_Pump_Power_On,
		b_AP1_Run := GVL_RESD.b_Admixture_Pump_Set_Run,
		b_AP1_Flush_On := GVL_RESD.b_Admixture_Pump_Flush_On,
		b_AP1_Check_On := GVL_RESD.b_Admixture_Pump_Check_On,

		n_AP1_Flowrate_mode := TRUE,
		n_AP1_Max_Flowrate := GVL_RESD.n_Admixture_Pump_Max_Flowrate,
		n_AP1_Operate_Flowrate := REAL_TO_INT(GVL_RESD.f_Admixture_Pump_Set_Flowrate * 10),
		n_AP1_Check_Flowrate := REAL_TO_INT(GVL_RESD.f_Admixture_Pump_Check_Flowrate * 10),
		n_AP1_Flush_Flowrate := REAL_TO_INT(GVL_RESD.f_Admixture_Pump_Flush_Flowrate * 10),
		n_AP1_Dosing_factor := REAL_TO_INT(GVL_RESD.f_Admixture_Pump_dosing_factor * 10),

		// Admixture pump (High)
		b_SP1_Power_On := GVL_RESD.b_Sup_Admixture_Pump_Power_On,
		b_SP1_Run := GVL_RESD.b_Sup_Admixture_Pump_Set_Run,
		b_SP1_Flush_On := GVL_RESD.b_Sup_Admixture_Pump_Flush_On,
		b_SP1_Check_On := GVL_RESD.b_Sup_Admixture_Pump_Check_On,

		n_SP1_Flowrate_mode := TRUE,
		n_SP1_Max_Flowrate := GVL_RESD.n_Sup_Admixture_Pump_Max_Flowrate,
		n_SP1_Operate_Flowrate := REAL_TO_INT(GVL_RESD.f_Sup_Admixture_Pump_Set_Flowrate * 10),
		n_SP1_Check_Flowrate := REAL_TO_INT(GVL_RESD.f_Sup_Admixture_Pump_Check_Flowrate * 10),
		n_SP1_Flush_Flowrate := REAL_TO_INT(GVL_RESD.f_Sup_Admixture_Pump_Flush_Flowrate * 10),
		n_SP1_Dosing_factor := REAL_TO_INT(GVL_RESD.f_Sup_Admixture_Pump_dosing_factor * 10),
		);

 / / * **********************************************************************************
// Inline Mixer
 / / * *********************************************************************************
	/ // /mixer S
		Mixer1_2(
			Mixer1			:= GVL.Axis_Mixer1,
			Mixer2			:= GVL.Axis_Mixer2,
			f_Velocity		:= GVL.f_MI1_MaxSpeed,
			b_JogForward	:= FALSE,
			b_JogBackwards	:= fb_Laptop_SetOutputDataToIO.b_MI1_set_run,
			b_Enable		:= fb_Laptop_SetOutputDataToIO.b_Ml1_Enable AND GVL_IO.ib_CC1_Safety_Ready,
			b_Reset			:= GVL_RESD.b_Concrete_Controller_reset OR GVL_IO.ib_CC1_Button_Reset,
			f_Override		:= fb_Laptop_SetOutputDataToIO.f_MI1_Override_Speed
			);
			(*
			fb_MC_SetPosition(
			Axis			:= GVL.Axis_Mixer2,
			memory			:= 1,
			Feedback		:= 0); *)
	pos := GVL.Axis_Mixer2.NcToPlc.ModuloActPos;
	GVL.b_MI1_ReadToDrive := Mixer1_2.b_ReadyToDrive;
	P_MI1_OnOff(b_set_run := fb_Laptop_SetOutputDataToIO.b_MI1_set_run, );

 / / * **********************************************************************************
// Concrete Pump
 / / * **********************************************************************************

P_CP1_Enable();
P_CP1_Check();


 / / * **********************************************************************************
// Acceleration Pump
 / / * **********************************************************************************

// Acceleration Pump 1 check
P_AP1_Check();

//
// Check for Acceleration Pump 1 state
IF NOT GVL_ResearchData.b_RED_Acceleration_Pump_Check_On THEN
//
// Acceleration Pump 1 On/Off
P_AP1_OnOff();
END_IF

 / / * **********************************************************************************
// Superplasticizer Pump
 / / * **********************************************************************************

//
// Superplasticizer Pump 1 Check (220916 WT
P_SP1_Check();
IF NOT GVL_ResearchData.b_RED_Superplasticizer_Pump_Check_On THEN
//

P_SP1_OnOff();
END_IF


	// CC1
	b_mode_manual: BOOL;
	b_mode_laptop: BOOL;
	b_mode_robot: BOOL;
	b_CC1_power_on: BOOL;
	n_current_mode: INT;

	// MI1
	b_MI1_Is_Run: BOOL;
	b_MI1_is_ready: BOOL;
	n_MI1_status_SpeedM1: INT;
	n_MI1_status_SpeedM2: INT;
	f_Status_Torque_Motor_1: REAL;
	f_Status_Torque_Motor_2: REAL;
	f_MI1_status_temperature_funnel_outlet: REAL;
	f_MI1_status_Pressure_funnel_inlet: REAL;
	f_MI1_status_temperature_motor_1: REAL;
	f_MI1_status_temperature_motor_2: REAL;

	// CP1
	b_CP1_is_run: BOOL;
	b_CP1_is_ready: BOOL;
	f_CP1_status_temperature_concrete_fresh: REAL; // [°C]
	f_CP1_status_temperature_Concrete_pump: REAL; // [°C]
	f_CP1_status_pressure_Concrete_pump: REAL; // [bar]

	// AP1
	b_AP1_is_run: BOOL;
	b_AP1_is_ready: BOOL;

	// SP1
	b_SP1_is_run: BOOL;
	b_SP1_is_ready: BOOL;





END_IF


// ELSE
// 	temp_speed_override:=F_ScalAnalogOut(
// 		n_Input:= REAL_TO_INT(GVL_IO.in_MI1_Poti_Speed),
// 		n_InMin:= 0,
// 		n_InMax:= 32767,
// 		n_OutMin:= 0,
// 		n_OutMax:= 100);
// END_IF

// GVL_VAR.f_MI1_Override:= temp_speed_override;

]] > < / ST >
    < / IMPLEMENTATION >
    < LineIds Name = "MAIN" >
      < LineId Id = "1206" Count = "13" / >
      < LineId Id = "796" Count = "0" / >
      < LineId Id = "1221" Count = "1" / >
      < LineId Id = "1375" Count = "0" / >
      < LineId Id = "1373" Count = "0" / >
      < LineId Id = "1376" Count = "0" / >
      < LineId Id = "1366" Count = "0" / >
      < LineId Id = "1403" Count = "0" / >
      < LineId Id = "1532" Count = "18" / >
      < LineId Id = "1472" Count = "0" / >
      < LineId Id = "1658" Count = "0" / >
      < LineId Id = "1530" Count = "0" / >
      < LineId Id = "1529" Count = "0" / >
      < LineId Id = "1479" Count = "0" / >
      < LineId Id = "1525" Count = "0" / >
      < LineId Id = "1480" Count = "0" / >
      < LineId Id = "1657" Count = "0" / >
      < LineId Id = "1481" Count = "3" / >
      < LineId Id = "1486" Count = "37" / >
      < LineId Id = "1414" Count = "0" / >
      < LineId Id = "1528" Count = "0" / >
      < LineId Id = "1552" Count = "0" / >
      < LineId Id = "1613" Count = "2" / >
      < LineId Id = "1553" Count = "0" / >
      < LineId Id = "1568" Count = "14" / >
      < LineId Id = "1629" Count = "0" / >
      < LineId Id = "1628" Count = "0" / >
      < LineId Id = "1624" Count = "0" / >
      < LineId Id = "1731" Count = "3" / >
      < LineId Id = "1740" Count = "0" / >
      < LineId Id = "1738" Count = "0" / >
      < LineId Id = "1737" Count = "0" / >
      < LineId Id = "1583" Count = "0" / >
      < LineId Id = "1716" Count = "3" / >
      < LineId Id = "1721" Count = "9" / >
      < LineId Id = "1565" Count = "0" / >
      < LineId Id = "1748" Count = "0" / >
      < LineId Id = "1764" Count = "6" / >
      < LineId Id = "1774" Count = "1" / >
      < LineId Id = "1777" Count = "0" / >
      < LineId Id = "1762" Count = "1" / >
      < LineId Id = "1778" Count = "1" / >
      < LineId Id = "1782" Count = "0" / >
      < LineId Id = "1780" Count = "1" / >
      < LineId Id = "1623" Count = "0" / >
      < LineId Id = "1563" Count = "1" / >
      < LineId Id = "1405" Count = "0" / >
      < LineId Id = "842" Count = "0" / >
      < LineId Id = "1107" Count = "0" / >
      < LineId Id = "887" Count = "9" / >
      < LineId Id = "181" Count = "0" / >
      < LineId Id = "2" Count = "0" / >
    < / LineIds >
  < / POU >
 < / TcPlcObject >
