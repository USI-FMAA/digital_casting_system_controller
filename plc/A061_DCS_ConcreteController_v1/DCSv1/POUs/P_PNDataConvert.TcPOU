<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_PNDataConvert" Id="{f7d26543-681d-42ee-b4b0-773d93a30fbb}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_PNDataConvert
VAR
	
	sizearr: UINT;

	arr_GISlot: ARRAY[32..255] OF BYTE;
	arr_GOSlot: ARRAY[32..255] OF BYTE;

	arr_CC1_DOSlot: ARRAY[0..7] OF BOOL;
	arr_CC1_DISlot: ARRAY[0..7] OF BOOL;
	
	
	arr_MI1_DOSlot: ARRAY [0..7] OF BOOL;
	arr_MI1_DISlot: ARRAY [0..7] OF BOOL;

	arr_CP1_DOSlot: ARRAY [0..7] OF BOOL;
	arr_CP1_DISlot: ARRAY [0..7] OF BOOL;

	arr_AP1_DOSlot: ARRAY [0..7] OF BOOL;
	arr_AP1_DISlot: ARRAY [0..7] OF BOOL;

	arr_SP1_DOSlot: ARRAY [0..7] OF BOOL;
	arr_SP1_DISlot: ARRAY [0..7] OF BOOL;

	// inline mixer
	on_MI1_status_speed_motor_1: UINT;
	on_MI1_status_speed_motor_2: UINT;
	
	on_MI1_status_torque_motor_1: UINT;
	on_MI1_status_torque_motor_2: UINT;
	
	on_MI1_status_temperature_motor_1 : UINT; 			
	on_MI1_status_temperature_motor_2 : UINT;
	
	on_MI1_status_temperature_funnel_outlet : UINT; 
	on_MI1_status_Pressure_funnel_inlet: UINT;
	on_CP1_status_temperature_concrete_fresh : UINT;
	on_CP1_status_temperature_Concrete_pump : UINT;
	on_CP1_status_pressure_Concrete_pump : UINT;
END_VAR



]]></Declaration>
    <Implementation>
      <ST><![CDATA[// ***********************************************************************************
//
// Müller-steinag Gruppe, Kandergrien Einigen, CH-3646 Bern
// ETH Zurich, Building HIF E26, Laura-Hezner-Weg 7, CH-8093 Zürich
//
// ***********************************************************************************
//
// PROJECT: A061 Digital Casting System
// FUNCTION: Profinet Variable Convertor
// AUTHOR: Weiting Chen
// EMAIL: chenw@usi.ch
// Copyright: USI Mendrisio; ETH Zürich; Müller-steinag Gruppe (CH) 2024
//
// ***********************************************************************************

// output(o_) to robot digital input (DI); input(i_) from robot digital output(DO)

// Array of DO_From_ROB is 0 to 255 bits | 0 to 31 bytes
// Array of GO_From_ROB is 256 to 2047 bits | 32 to 255 bytes
// Array of DI_To_ROB is 0 to 255 bits | 0 to 31 bytes
// Array of GI_To_ROB is 256 to 2047 bits | 32 to 255 bytes

// scale data by 100 for Real to UINT 
// Group input and output slots
	MEMCPY(ADR(GVL_PN.GI_To_ROB), ADR(arr_GISlot), SIZEOF(arr_GOSlot));
	MEMCPY(ADR(arr_GOSlot), ADR(GVL_PN.GO_From_ROB), SIZEOF(arr_GOSlot));
	
// Concrete Controller *****
	// Digital output from robot( mapping from 0 to 7 in robotstudio)
		arr_CC1_DOSlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DO_From_ROB[0]);
		GVL_ROB.ib_CC1_enable := arr_CC1_DOSlot[0]; // #0
		GVL_ROB.ib_CC1_reset := arr_CC1_DOSlot[1]; // #1

		
	// Group output from Robot ( mapping from 32 to 46, 8*2Bytes in robotstudio)
		F_Convert_2Byte_to_Int(GVL_ROB.in_spare, arr_GOSlot[32], arr_GOSlot[33]); // #256 to 271

	// Digital input to robot (mapping from 0 to 7 in robotstudio)
		arr_CC1_DISlot[0] := GVL_ROB.ob_mode_manual; // #0
		arr_CC1_DISlot[1] := GVL_ROB.ob_mode_laptop;
		arr_CC1_DISlot[2] := GVL_ROB.ob_mode_robot;
		arr_CC1_DISlot[3] := GVL_ROB.ob_CC1_power_on;
		
		// pointer 
		MEMCPY(ADR(GVL_PN.DI_To_ROB[0]), ADR(arr_CC1_DISlot), SIZEOF(arr_CC1_DISlot));
	
		
	// Group Input To Robot (32 to 46; 8*2Bytes)
		F_Convert_Int_to_2Byte(GVL_ROB.on_current_mode, arr_GISlot[32], arr_GISlot[33]); // #256 to 271


// Inline Mixer (MI1) *****
	// Digital output from robot ( mapping from 8 to 15 in robotstudio)
		arr_MI1_DOSlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DO_From_ROB[1]);
		GVL_ROB.ib_MI1_set_run := arr_MI1_DOSlot[0]; // [0 rpm to 120 rpm]
		GVL_ROB.ib_Ml1_enable := arr_MI1_DOSlot[1];
		GVL_ROB.ib_MI1_set_curved_speed_mode_on := arr_MI1_DOSlot[2];

	// Group output from Robot ( mapping from 47 to 61, 8*2Bytes in robotstudio)
		//F_Convert_2Byte_to_Int(GVL_ROB.in_MI1_set_speed, arr_GOSlot[47], arr_GOSlot[48]);
		// 
		F_Convert_2Byte_to_Uint(GVL_ROB.in_MI1_set_speed, arr_GOSlot[47], arr_GOSlot[48]); // 376-391
		
		
	// Digital input to robot (mapping from 8 to 15 in robotstudio)
		//arr_MI1_DISlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DI_To_ROB[1]);
		arr_MI1_DISlot[0] := GVL_ROB.ob_MI1_is_run;
		arr_MI1_DISlot[1] := GVL_ROB.ob_MI1_is_ready;
		
		// pointer 
		MEMCPY(ADR(GVL_PN.DI_To_ROB[1]), ADR(arr_MI1_DISlot), SIZEOF(arr_MI1_DISlot));

	// Group Input To Robot (mapping from 47 to 76, 16*2Bytes in robotstudio)
		
		// data convert 
		on_MI1_status_speed_motor_1:=REAL_TO_UINT(INT_TO_REAL(GVL_ROB.on_MI1_status_speed_motor_1)/120*65535);
		on_MI1_status_speed_motor_2:=REAL_TO_UINT(INT_TO_REAL(GVL_ROB.on_MI1_status_speed_motor_2)/120*65535);
		
		on_MI1_status_torque_motor_1:=REAL_TO_UINT(GVL_ROB.on_MI1_status_torque_motor_1*100);
		on_MI1_status_torque_motor_2:=REAL_TO_UINT(GVL_ROB.on_MI1_status_torque_motor_2*100);
		
		on_MI1_status_temperature_motor_1:=REAL_TO_UINT(GVL_ROB.on_MI1_status_temperature_motor_1);
		on_MI1_status_temperature_motor_2:=REAL_TO_UINT(GVL_ROB.on_MI1_status_temperature_motor_2);
		
		on_MI1_status_temperature_funnel_outlet:=REAL_TO_UINT(GVL_ROB.on_MI1_status_temperature_funnel_outlet);
		on_MI1_status_pressure_funnel_inlet:=REAL_TO_UINT(GVL_ROB.on_MI1_status_pressure_funnel_inlet*100);		
		
		
		F_Convert_Uint_to_2Byte(on_MI1_status_speed_motor_1, arr_GISlot[47], arr_GISlot[48]);
		F_Convert_Uint_to_2Byte(on_MI1_status_speed_motor_2, arr_GISlot[49], arr_GISlot[50]);
		
		F_Convert_Uint_to_2Byte(on_MI1_status_torque_motor_1, arr_GISlot[51], arr_GISlot[52]);
		F_Convert_Uint_to_2Byte(on_MI1_status_torque_motor_2, arr_GISlot[53], arr_GISlot[54]);
		F_Convert_Uint_to_2Byte(on_MI1_status_temperature_motor_1, arr_GISlot[55], arr_GISlot[56]);
		F_Convert_Uint_to_2Byte(on_MI1_status_temperature_motor_2, arr_GISlot[57], arr_GISlot[58]);
		F_Convert_Uint_to_2Byte(on_MI1_status_temperature_funnel_outlet, arr_GISlot[59], arr_GISlot[60]);
		F_Convert_Uint_to_2Byte(on_MI1_status_Pressure_funnel_inlet, arr_GISlot[61], arr_GISlot[62]);	

// Concrete pump (CP1) *****
	// Digital output from robot (mapping from 16 to 23 in robotstudio )
		arr_CP1_DOSlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DO_From_ROB[2]);
		GVL_ROB.ib_CP1_forward_on := arr_CP1_DOSlot[0]; // #16
		GVL_ROB.ib_CP1_backward_on := arr_CP1_DOSlot[1];		// 241219 Backward is not working from the conctroller
		GVL_ROB.ib_CP1_check_on := arr_CP1_DOSlot[2];
		GVL_ROB.ib_CP1_flush_on := arr_CP1_DOSlot[3];

	// Group output from Robot ( mapping from 62 to 76, 8*2Bytes in robotstudio)
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_set_speed, arr_GOSlot[62], arr_GOSlot[63]); // 0 to 75 [rpm] #496
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_set_flowrate, arr_GOSlot[64], arr_GOSlot[65]); // 0 to 16 [l/min]
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_set_dosing_volume, arr_GOSlot[66], arr_GOSlot[67]); 	// calibration in 230926 WT 0.32
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_set_check_Flowrate, arr_GOSlot[68], arr_GOSlot[69]);	// [l/min]
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_concrete_density, arr_GOSlot[70], arr_GOSlot[71]); // [g/ml]
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_concrete_mass, arr_GOSlot[72], arr_GOSlot[73]); // [g]
		F_Convert_2Byte_to_Uint(GVL_ROB.in_CP1_set_flush_flowrate, arr_GOSlot[74], arr_GOSlot[75]); // [l/min]
		// F_Convert_2Byte_to_Uint(GVL_ROB.t_CP1_set_check_duration, arr_GOSlot[76], arr_GOSlot[77]);	 check with 32 bit


	// Digital input to robot (mapping from 16 to 23 in robotstudio)
		//arr_CP1_DISlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DI_To_ROB[2]);
		arr_CP1_DISlot[0] := GVL_ROB.ob_CP1_is_run;		// #16
		arr_CP1_DISlot[1] := GVL_ROB.ob_CP1_is_ready;	// #17
		
		MEMCPY(ADR(GVL_PN.DI_To_ROB[2]), ADR(arr_CP1_DISlot), SIZEOF(arr_CP1_DISlot));

	// Group Input To Robot (mapping from 77 to 91, 8*2Bytes in robotstudio)
		on_CP1_status_temperature_concrete_fresh := REAL_TO_UINT(GVL_ROB.on_CP1_status_temperature_concrete_fresh);
		on_CP1_status_temperature_Concrete_pump := REAL_TO_UINT(GVL_ROB.on_CP1_status_temperature_Concrete_pump);
		on_CP1_status_pressure_Concrete_pump := REAL_TO_UINT(GVL_ROB.on_CP1_status_pressure_Concrete_pump*100);

		F_Convert_Uint_to_2Byte(on_CP1_status_temperature_concrete_fresh, arr_GISlot[77], arr_GISlot[78]); // [°C] #624-639
		F_Convert_Uint_to_2Byte(on_CP1_status_temperature_Concrete_pump, arr_GISlot[79], arr_GISlot[80]); // [°C]
		F_Convert_Uint_to_2Byte(on_CP1_status_pressure_Concrete_pump, arr_GISlot[81], arr_GISlot[82]); // [ bar]

// Admixture pump, High dosage ViscoTech Pump *****
	// Digital output from robot (mapping from 24 to 31 in robotstudio )
		arr_AP1_DOSlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DO_From_ROB[3]);
		GVL_ROB.ib_AP1_set_run := arr_AP1_DOSlot[0]; // #24
		GVL_ROB.ib_AP1_check_on := arr_AP1_DOSlot[1];
		GVL_ROB.ib_AP1_flush_on := arr_AP1_DOSlot[2];
		GVL_ROB.ib_AP1_power_on := arr_AP1_DOSlot[3];
		

	// Group output from Robot ( mapping from 77 to 91, 8*2Bytes in robotstudio)
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_set_flowrate, arr_GOSlot[78], arr_GOSlot[79]); // **** [ml/min] #77
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_set_dosing_factor, arr_GOSlot[80], arr_GOSlot[81]);
		
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_set_check_flowrate, arr_GOSlot[82], arr_GOSlot[83]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_material_density, arr_GOSlot[84], arr_GOSlot[85]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_material_mass, arr_GOSlot[86], arr_GOSlot[87]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_AP1_flush_flowrate, arr_GOSlot[88], arr_GOSlot[89]);
		// F_Convert_2Byte_to_Int(GVL_ROB.t_AP1_set_check_duration, arr_GOSlot[90], arr_GOSlot[92]); check with 32 bit

	// Digital input to robot (mapping from 24 to 31 in robotstudio)
		//arr_AP1_DISlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DI_To_ROB[3]);	// #24
		arr_AP1_DISlot[0] := GVL_ROB.ob_AP1_is_run;
		arr_AP1_DISlot[1] := GVL_ROB.ob_AP1_is_ready;
		
		MEMCPY(ADR(GVL_PN.DI_To_ROB[3]), ADR(arr_AP1_DISlot), SIZEOF(arr_AP1_DISlot));
		
	// Group Input To Robot (mapping from 92 to 106, 8*2Bytes in robotstudio)
		F_Convert_Uint_to_2Byte(GVL_ROB.on_AP1_max_flowrate, arr_GOSlot[92], arr_GOSlot[93]); // [l/min]

// Admixture pump, Low dosage ViscoTech Pump *****
	// Digital output from robot (mapping from 32 to 39 in robotstudio )
		arr_SP1_DOSlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DO_From_ROB[4]);
		GVL_ROB.ib_SP1_set_run := arr_SP1_DOSlot[0]; // #32
		GVL_ROB.ib_SP1_set_check_on := arr_SP1_DOSlot[1];
		GVL_ROB.ib_SP1_flush_on := arr_SP1_DOSlot[2];
		GVL_ROB.ib_SP1_power_on := arr_SP1_DOSlot[3];

	// Group output from Robot ( mapping from 92 to 106, 8*2Bytes in robotstudio)
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_set_flowrate, arr_GOSlot[94], arr_GOSlot[95]); // **** [ml/min] #92
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_dosing_factor, arr_GOSlot[96], arr_GOSlot[97]);
		
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_set_check_flowrate, arr_GOSlot[98], arr_GOSlot[99]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_material_density, arr_GOSlot[100], arr_GOSlot[101]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_material_mass, arr_GOSlot[102], arr_GOSlot[103]);
		F_Convert_2Byte_to_Uint(GVL_ROB.in_SP1_flush_flowrate, arr_GOSlot[104], arr_GOSlot[105]);
		
		// F_Convert_2Byte_to_Int(GVL_ROB.t_SP1_Check_Duration, arr_GOSlot[106], arr_GOSlot[107]); // Check with 32 bit

	// Digital input to robot (mapping from 32 to 39 in robotstudio)
		//arr_SP1_DISlot := F_CONVERT_BYTE_TO_BIT(GVL_PN.DI_To_ROB[4]);
		arr_SP1_DISlot[0] := GVL_ROB.ob_SP1_is_run; // #32
		arr_SP1_DISlot[1] := GVL_ROB.ob_SP1_is_ready;
		
		MEMCPY(ADR(GVL_PN.DI_To_ROB[4]), ADR(arr_SP1_DISlot), SIZEOF(arr_SP1_DISlot));

	// Group Input To Robot (mapping from 106 to 120, 8*2Bytes in robotstudio)
		F_Convert_Uint_to_2Byte(GVL_ROB.on_SP1_max_flowrate, arr_GOSlot[106], arr_GOSlot[107]); // [l/min]

(*
// Spare Component *****
	// Digital output from robot (mapping from 40 to .. in robotstudio )
	// Group output from Robot ( mapping from 107 to .., 8*2Bytes in robotstudio)
	// Digital input to robot (mapping from 40 to .. in robotstudio)
	// Group Input To Robot (mapping from 121 to .., 8*2Bytes in robotstudio)
//
*)
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		


]]></ST>
    </Implementation>
    <LineIds Name="P_PNDataConvert">
      <LineId Id="27" Count="13" />
      <LineId Id="197" Count="0" />
      <LineId Id="42" Count="5" />
      <LineId Id="413" Count="0" />
      <LineId Id="48" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="52" Count="4" />
      <LineId Id="222" Count="1" />
      <LineId Id="57" Count="4" />
      <LineId Id="63" Count="3" />
      <LineId Id="266" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="224" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="69" Count="12" />
      <LineId Id="309" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="275" Count="1" />
      <LineId Id="83" Count="3" />
      <LineId Id="406" Count="1" />
      <LineId Id="409" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="455" Count="1" />
      <LineId Id="311" Count="0" />
      <LineId Id="348" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="387" Count="2" />
      <LineId Id="401" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="410" Count="0" />
      <LineId Id="412" Count="0" />
      <LineId Id="411" Count="0" />
      <LineId Id="385" Count="1" />
      <LineId Id="315" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="91" Count="5" />
      <LineId Id="460" Count="2" />
      <LineId Id="489" Count="0" />
      <LineId Id="464" Count="19" />
      <LineId Id="493" Count="1" />
      <LineId Id="484" Count="1" />
      <LineId Id="570" Count="0" />
      <LineId Id="567" Count="1" />
      <LineId Id="565" Count="0" />
      <LineId Id="486" Count="2" />
      <LineId Id="615" Count="6" />
      <LineId Id="696" Count="0" />
      <LineId Id="695" Count="0" />
      <LineId Id="622" Count="3" />
      <LineId Id="641" Count="0" />
      <LineId Id="626" Count="2" />
      <LineId Id="630" Count="0" />
      <LineId Id="632" Count="4" />
      <LineId Id="642" Count="2" />
      <LineId Id="637" Count="1" />
      <LineId Id="614" Count="0" />
      <LineId Id="647" Count="6" />
      <LineId Id="697" Count="0" />
      <LineId Id="654" Count="3" />
      <LineId Id="691" Count="0" />
      <LineId Id="658" Count="3" />
      <LineId Id="690" Count="0" />
      <LineId Id="662" Count="4" />
      <LineId Id="693" Count="0" />
      <LineId Id="692" Count="0" />
      <LineId Id="694" Count="0" />
      <LineId Id="667" Count="2" />
      <LineId Id="671" Count="3" />
      <LineId Id="679" Count="0" />
      <LineId Id="684" Count="0" />
      <LineId Id="686" Count="0" />
      <LineId Id="688" Count="0" />
      <LineId Id="457" Count="0" />
      <LineId Id="528" Count="36" />
      <LineId Id="498" Count="26" />
      <LineId Id="403" Count="0" />
      <LineId Id="405" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>