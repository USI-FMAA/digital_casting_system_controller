<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_MI1_Curved_Speed" Id="{668deb67-cf09-4e20-9688-76a532b9420e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_MI1_Curved_Speed
VAR_INPUT
	n_Step : INT :=0;
	b_set_run : BOOL;
	b_check_mode_on : BOOL;
	
	//Timer
	t_MI1_Time_Const_Speed : TIME :=T#30S;
	t_MI1_Time_Changed_Speed : TIME :=T#20S;
END_VAR

VAR	
	// Condition
	b_Condition : BOOL;
	
	// Timer
	fb_MI1_Timer_Const_Speed: TON;
	fb_MI1_Timer_Changed_Speed: TON;
	
	// Trigger
	fb_MI1_Trigger_Changed_Speed : R_TRIG;
	
	// Speed setup
	f_MI1_Initial_Speed: REAL := 20;
	f_MI1_Constant_Speed: REAL := 60; 
	f_MI1_Max_Speed : REAL := 120;
	
END_VAR

VAR_OUTPUT
	// Speed Output
	f_MI1_Speed: REAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// ***********************************************************************************
//
// Müller-steinag Gruppe, Kandergrien Einigen, CH-3646 Bern
// ETH Zurich, Building Hin E26, Laura-Hezner-Weg 7, CH-8093 Zürich
// 
// ***********************************************************************************
// 
// PROJECT     :  A061 Digital Casting System 
// FUNCTION    :  Curve speed changing mode for inline mixer
// AUTHOR      :  Weiting Chen
// EMAIL       :  chenw@usi.ch
// Copyright   :  USI Mendrisio; ETH Zürich; Müller-steinag Gruppe (CH) 2023
//
// ***********************************************************************************

//
CASE n_Step OF

	0: 
		// Initalization		
		b_Condition:=TRUE;
		
		IF b_Condition THEN
			b_Condition:=FALSE;
			n_Step:=10;
		END_IF
		
	10: 
		// constant speed as required 		
		b_Condition:=b_check_mode_on AND b_set_run;
		
		// Start timer
		fb_MI1_Timer_Const_Speed(
				IN:=n_Step=10,
				PT:=t_MI1_Time_Const_Speed);
				
		// Set the speed
		f_MI1_Speed:= f_MI1_Constant_Speed;
		
		IF b_Condition AND fb_MI1_Timer_Const_Speed.Q THEN
			
			// reset timer 
			fb_MI1_Timer_Const_Speed(IN:=FALSE);
			// set speed as initial speed
			f_MI1_Speed:=f_MI1_Initial_Speed;
			
			b_Condition:=FALSE;
			n_Step:=15;
		END_IF
	
	15: 
		// 		
		b_Condition:=TRUE;
		
		IF b_Condition THEN
			
			b_Condition:=FALSE;
			n_Step:=20;
		END_IF
		
	20: 
		// Linear speed increasing 		
		b_Condition:=b_check_mode_on;
		
		IF f_MI1_Speed < f_MI1_Max_Speed THEN
			
			// Start Timer 
			fb_MI1_Timer_Changed_Speed(
					IN:=n_Step=20,
					PT:=t_MI1_Time_Changed_Speed);
			// Trigger 
			fb_MI1_Trigger_Changed_Speed(clk:=fb_MI1_Timer_Changed_Speed.Q);
			IF fb_MI1_Trigger_Changed_Speed.Q THEN
				f_MI1_Speed:= f_MI1_Speed +f_MI1_Initial_Speed;
				// Reset timer 
				fb_MI1_Timer_Changed_Speed(IN:=FALSE);
			END_IF
		END_IF
		
		IF b_Condition AND f_MI1_Speed = f_MI1_Max_Speed THEN
			b_Condition:=FALSE;
			n_Step:=30;
		END_IF
		
	30: 
		// Linear speed decreasing 		
		b_Condition:=b_check_mode_on;
		
		IF f_MI1_Speed = f_MI1_Max_Speed OR f_MI1_Speed < f_MI1_Max_Speed THEN
			
			// Start Timer 
			fb_MI1_Timer_Changed_Speed(
					IN:=n_Step=30,
					PT:=t_MI1_Time_Changed_Speed);
			// Trigger 
			fb_MI1_Trigger_Changed_Speed(clk:=fb_MI1_Timer_Changed_Speed.Q);
			IF fb_MI1_Trigger_Changed_Speed.Q THEN
				f_MI1_Speed:= f_MI1_Speed - f_MI1_Initial_Speed;
				fb_MI1_Timer_Changed_Speed(IN:=FALSE);
			END_IF
		END_IF
		
		IF b_Condition AND f_MI1_Speed = 0 THEN
			//
			f_MI1_Speed:= f_MI1_Initial_Speed;
			b_Condition:=FALSE;
			n_Step:=40;
		END_IF
		
	40: 
		// 		
		b_Condition:=TRUE;
		
		IF b_Condition THEN
			b_Condition:=FALSE;
			n_Step:=50;
		END_IF
		
	50: 
		// 		
		b_Condition:=TRUE;
		
		IF b_Condition THEN
			
			// reset 
			b_check_mode_on:=FALSE;
			b_set_run:= FALSE;
			
			b_Condition:=FALSE;
			n_Step:=0;
		END_IF
		
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="P_MI1_Curved_Speed">
      <LineId Id="1542" Count="131" />
      <LineId Id="1180" Count="0" />
      <LineId Id="1151" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>