<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SetOutputDataToIO" Id="{1d97a739-2a9b-4bf8-8fc4-6215cf7509a3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SetOutputDataToIO
VAR_INPUT
	// Mixer 
	b_MI1_set_run: BOOL;
	b_Ml1_Enable : BOOL;
	b_MI1_Curved_Speed_On : BOOL;
	f_MI1_Override_Speed :REAL;
	f_MI1_Override_Max_Speed :REAL;
	
	
	// Concrete Pump
	b_CP1_Forward_On : BOOL;
	b_CP1_Backward_On : BOOL;
	b_CP1_Flush_On :BOOL;	
	b_CP1_Check_On : BOOL;
	n_CP_Flowrate_mode : BOOL;
	n_CP1_Operate_Flowrate : UDINT;
	n_CP1_Check_Flowrate : UDINT;	
	n_CP1_Flush_Flowrate : UDINT;	
	f_dosing_volume:INT;
	
	n_CP1_max_speed : INT;  // rpm
	n_CP1_target_speed: INT; // rpm

	// Admixture pump (High)
	b_AP1_Power_On : BOOL;
	b_AP1_Run : BOOL;
	b_AP1_Flush_On :BOOL;
	b_AP1_Check_On :BOOL;
	
	n_AP1_Flowrate_mode : BOOL;
	n_AP1_Max_Flowrate : INT;
	n_AP1_Operate_Flowrate : UDINT;
	n_AP1_Check_Flowrate : UDINT;
	n_AP1_Flush_Flowrate : UDINT;
	n_AP1_Dosing_factor : INT;
	
	// Admixture pump (High)
	b_SP1_Power_On : BOOL;
	b_SP1_Run : BOOL;
	b_SP1_Flush_On :BOOL;
	b_SP1_Check_On :BOOL;
	
	n_SP1_Flowrate_mode : BOOL;
	n_SP1_Max_Flowrate : INT;
	n_SP1_Operate_Flowrate : UDINT;
	n_SP1_Check_Flowrate : UDINT;
	n_SP1_Flush_Flowrate : UDINT;
	n_SP1_Dosing_factor : INT;
	
END_VAR
VAR_OUTPUT
END_VAR
VAR	
	// Condition
	_b_Condition_M11 : BOOL;
	_n_Step_M11 : INT;
	
	_n_temp_flowrate_CP1 : UDINT; 
	_n_temp_speed_CP1: INT;
	_n_temp_speed_AP1 : UDINT;
	_n_temp_speed_SP1 : UDINT;
	
	_n_temp_speed_MI1 : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// ***********************************************************************************
//
// Müller-steinag Gruppe, Kandergrien Einigen, CH-3646 Bern
// ETH Zurich, Building HIF E26, Laura-Hezner-Weg 7, CH-8093 Zürich
// 
// ***********************************************************************************
// 
// PROJECT     :  A061 Digital Casting System 
// FUNCTION    :  Set data to IO the process
// AUTHOR      :  Weiting Chen
// EMAIL       :  chenw@usi.ch
// Copyright   :  USI Mendrisio; ETH Zürich; Müller-steinag Gruppe (CH) 2023
// Contributor :  Philippe Fleischmann
//
// ***********************************************************************************


//***********************************************************************************
// MI1 
//***********************************************************************************

IF b_MI1_Curved_Speed_On THEN
		// run curved Speed mode
		P_MI1_Curved_Speed();
		_n_temp_speed_MI1:=F_ScalAnalogOut(
			n_Input:= REAL_TO_INT(P_MI1_Curved_Speed.f_MI1_speed),
			n_InMin:= 0, 
			n_InMax:= 120, 
			n_OutMin:= 0, 
			n_OutMax:= 100);
ELSE
	_n_temp_speed_MI1:=F_ScalAnalogOut(
		n_Input:= REAL_TO_INT(f_MI1_Override_Speed),
		n_InMin:= 0, 
		n_InMax:= 120, 
		n_OutMin:= 0, 
		n_OutMax:= 100);
END_IF
GVL.n_MI1_OverrideSpeed:=_n_temp_speed_MI1;

// ***********************************************************************************
// Concrete Pump 1 
// ***********************************************************************************


// Start
IF  P_CP1_Enable.n_Step=20 THEN
	GVL_IO.ob_CP1_Start:=TRUE;
ELSE
	GVL_IO.ob_CP1_Start:=FALSE;
END_IF

// Stop
IF  P_CP1_Enable.n_Step=40 THEN
	GVL_IO.ob_CP1_Stop:=TRUE;
ELSE
	GVL_IO.ob_CP1_Stop:=FALSE;
END_IF

GVL_IO.ob_CP1_Forward := b_CP1_Forward_On; // Forward
GVL_IO.ob_CP1_Backward := b_CP1_Backward_On; // Backward

// Set speed for pump
IF b_CP1_Flush_On THEN
	//
	// Process speed for flushing or filling the pipe
	 _n_temp_flowrate_CP1:=n_CP1_Flush_Flowrate;
ELSIF P_CP1_Check.n_Step=20 OR P_CP1_Check.n_Step=25 THEN
	//	
	// Check Flowrate for pump
	_n_temp_flowrate_CP1 :=n_CP1_Check_Flowrate;
ELSE
	//
	// Process speed for pump
	_n_temp_flowrate_CP1 :=n_CP1_Operate_Flowrate;
END_IF


// Concrete pump speed  0 (0V) to 75 rpm (10V)
IF NOT n_CP_Flowrate_mode THEN
	// set from rpm
	GVL_IO.on_CP1_Speed:=F_ScalAnalogOut(
		n_Input:= INT_TO_UDINT(n_CP1_target_speed),
		n_InMin:= 0, 
		n_InMax:= INT_TO_UDINT(n_CP1_max_speed), 
		n_OutMin:= 0, 
		n_OutMax:= 32767);
ELSE
	// set from flowrate
	GVL_IO.on_CP1_Speed:=F_ScalAnalogOut(
		n_Input:= _n_temp_flowrate_CP1,
		n_InMin:= 0, 
		n_InMax:= INT_TO_UDINT(n_CP1_max_speed*f_dosing_volume), 
		n_OutMin:= 0, 
		n_OutMax:= 32767);
END_IF


//***********************************************************************************
// AP1 (High dosage)
//***********************************************************************************

// Power on
GVL_IO.ob_AP1_Power_On := b_AP1_Power_On;
// Pressure okey always set to true
GVL_IO.ob_AP1_Pressure_Ok := TRUE;
// Bucket not empty always set to true
GVL_IO.ob_AP1_Not_Empty := TRUE;
// Pulse a preset amount not in use
GVL_IO.ob_AP1_Pulse := FALSE;

// Start pump
IF 	   P_AP1_OnOff.n_Step=30 
	OR P_AP1_Check.n_Step=30
THEN
	//
	// Pump on
	GVL_IO.ob_AP1_Start:=TRUE;
ELSE
	//
	// Pump off
	GVL_IO.ob_AP1_Start:=FALSE;
END_IF

//
// Set speed for pump
IF b_AP1_Flush_On AND P_AP1_OnOff.n_Step=30 THEN
	//
	// Process speed for flushing the pipe
	_n_temp_speed_AP1:=n_AP1_Flush_Flowrate;
ELSIF P_AP1_Check.n_Step=20 OR P_AP1_Check.n_Step=30 THEN
	//	
	// Check Flowrate for pump
	_n_temp_speed_AP1:=n_AP1_Check_Flowrate;
ELSE
	//
	// Process speed for pump
	_n_temp_speed_AP1:=n_AP1_Operate_Flowrate;
END_IF

GVL_IO.on_AP1_Speed:=F_ScalAnalogOut(
	n_Input:= _n_temp_speed_AP1,
	n_InMin:= 0, 
	n_InMax:= INT_TO_UDINT(n_AP1_Max_Flowrate)*n_AP1_Dosing_factor, 
	n_OutMin:= 0, 
	n_OutMax:= 32767);

//***********************************************************************************
// SP1 (Low dosage)
//***********************************************************************************

// Power on
GVL_IO.ob_SP1_Power_On := b_SP1_Power_On;
// Pressure okey always set to true
GVL_IO.ob_SP1_Pressure_Ok := TRUE;
// Bucket not empty always set to true
GVL_IO.ob_SP1_Not_Empty := TRUE;
// Pulse a preset amount not in use
GVL_IO.ob_SP1_Pulse := FALSE;

// Start pump
IF		P_SP1_OnOff.n_step= 30 
	OR 	P_SP1_Check.n_Step= 30 
THEN
	//
	// Pump On
	GVL_IO.ob_SP1_Start:=TRUE;
ELSE
	//
	// Pump On
	GVL_IO.ob_SP1_Start:=FALSE;
END_IF

//
// Set speed for pump
IF b_SP1_Flush_On AND P_SP1_OnOff.n_Step=30 THEN
	//
	// Process speed for flushing the pipe
	_n_temp_speed_SP1:=n_SP1_Flush_Flowrate;
ELSIF P_SP1_Check.n_Step=20 OR P_SP1_Check.n_Step=30 THEN
	//	
	// Check Flowrate for pump
	_n_temp_speed_SP1:=n_SP1_Check_Flowrate;
ELSE
	//
	// Process speed for pump
	_n_temp_speed_SP1:=n_SP1_Operate_Flowrate;
END_IF

GVL_IO.on_SP1_Speed:=F_ScalAnalogOut(
	n_Input:= _n_temp_speed_SP1,
	n_InMin:= 0, 
	n_InMax:= INT_TO_UDINT(n_SP1_Max_Flowrate*n_SP1_Dosing_factor), 
	n_OutMin:= 0, 
	n_OutMax:= 32767);
]]></ST>
    </Implementation>
    <LineIds Name="FB_SetOutputDataToIO">
      <LineId Id="72" Count="194" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>